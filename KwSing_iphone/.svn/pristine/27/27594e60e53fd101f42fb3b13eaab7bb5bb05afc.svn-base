//
//  MusicLibViewController.m
//  KwSing
//
//  Created by Qian Hu on 12-8-1.
//  Copyright (c) 2012年 酷我音乐. All rights reserved.
//

#import "MusicLibViewController.h"
#include "KSWebView.h"
#include "SearchViewController.h"
#include "SegmentControl.h"
#include "ImageMgr.h"
#include "globalm.h"
#include "KSMusicLibDelegate.h"
#include "MessageManager.h"
#include "IMusicLibObserver.h"
#include "ArtistCatViewController.h"
#include "LocalMusicRequest.h"
#include "KSAppDelegate.h"
//#include "KSongViewController.h"
#include "NowPlayViewController.h"
#include "FooterTabBar.h"
#include "LocalMusicViewController.h"
#include "KwConfig.h"
#include "KwConfigElements.h"
#include "MobClick.h"
#include "MessageManager.h"
#include "IObserverApp.h"
#include "RankViewController.h"
#include "MySongsViewController.h"
#include "MyOpusData.h"

#define REFRESH_INTERVAL        1

@interface KSMusicLibViewController() <SegmentControlDelegate,IObserverApp>
{
    UIView * subViewContainer;
    NSTimeInterval m_tLastClickPauseContinueBtnTime;
    
    RankViewController * RankView;
    LocalMusicViewController * LocalMusicView;
    KSMySongsViewController * MySongView;
    
    UIView * tipsView;
    
    SegmentControl *segctrl;
}
- (void) segmentControl:(SegmentControl*)segmentControl selectedItemChanged:(NSUInteger)index;

-(void)IObserverApp_MemoryWarning;

-(bool)hasShowTips;
-(void)showFirstInTips;
@end

@implementation KSMusicLibViewController
@synthesize musiclibDelegate;

- (void)dealloc{
    
    
    [super dealloc];
}

- (id)initWithFrame:(CGRect)frame{
    
    return [super initWithFrame:frame];
}

-(void)viewWillAppear:(BOOL)animated
{
    //GLOBAL_ATTACH_MESSAGE_OC(OBSERVER_ID_MUSICLIB,IMusicLibObserver);
    GLOBAL_ATTACH_MESSAGE_OC(OBSERVER_ID_APP,IObserverApp);
}
-(void)viewWillDisappear:(BOOL)animated
{
    //GLOBAL_DETACH_MESSAGE_OC(OBSERVER_ID_MUSICLIB,IMusicLibObserver);
    GLOBAL_DETACH_MESSAGE_OC(OBSERVER_ID_APP,IObserverApp);
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    musiclibDelegate = [[KSMusicLibDelegate alloc]init];
    
	UIImage* pTopBkImg=CImageMgr::GetImageEx("topBk.png");
    
    UIImageView * imageView = [[[UIImageView alloc]initWithImage:pTopBkImg]autorelease];
    CGRect rcBkg(self.view.bounds);
    rcBkg.size.height=pTopBkImg.size.height;
    [imageView setFrame:rcBkg];
    [self.view addSubview:imageView];
    
    UIImage* pShadow=CImageMgr::GetImageEx("topShadow.png");
    UIImageView * topshadowView = [[[UIImageView alloc]initWithImage:pShadow]autorelease];
    CGRect rcshadow = rcBkg;
    rcshadow.origin.y += rcshadow.size.height;
    rcshadow.size.height = pShadow.size.height;
    [topshadowView setFrame:rcshadow];
    [self.view addSubview:topshadowView];
    
    UIImageView * SegBkView = [[[UIImageView alloc]init]autorelease];
    CGRect rcSegBk = CGRectMake(22, 6, 276, 32);
    [SegBkView setFrame:rcSegBk];
    [SegBkView setImage:CImageMgr::GetImageEx("topNavSegBk_12.png")];
    [self.view addSubview:SegBkView];
    
    segctrl = [[[SegmentControl alloc]initWithFrame:CGRectMake(25, 9, 270, 27)] autorelease];
    segctrl.delegate = self;
    
    segctrl.segmentSize = CGSizeMake(90, 27);
    segctrl.segmentSpace = CGSizeMake(0, 0);
    
    [segctrl insertSegmentWithTitle:@"点歌台" atIndex:0 animated:NO];
    [segctrl insertSegmentWithTitle:@"已点歌曲" atIndex:1 animated:NO];
    [segctrl insertSegmentWithTitle:@"已录歌曲" atIndex:2 animated:NO];
    [segctrl setSegmentBackgroundImageFirst: CImageMgr::GetImageEx("topNavSegLeftNormal_5.png") selectedImage:CImageMgr::GetImageEx("topNavSegLeftDown_5.png")];
    [segctrl setSegmentBackgroundImage: CImageMgr::GetImageEx("topNavSegMidNormal_5.png") selectedImage:CImageMgr::GetImageEx("topNavSegMidDown_5.png")];
    [segctrl setSegmentBackgroundImageLast: CImageMgr::GetImageEx("topNavSegRightNormal_5.png") selectedImage:CImageMgr::GetImageEx("topNavSegRightDown_5.png")];

    [self.view addSubview:segctrl];
//
//    UIButton* btn = [UIButton buttonWithType:UIButtonTypeCustom];
//    UIImage *imgLocal = CImageMgr::GetImageEx("topReturnBtn_6.png");
//    [btn setBackgroundImage:imgLocal forState:UIControlStateNormal];
//    [btn setBackgroundImage:CImageMgr::GetImageEx("topReturnBtnDown_6.png") forState:UIControlStateHighlighted];
//    btn.frame = CGRectMake(263, 9, 50,imgLocal.size.height);
//    [btn setTitle:@"已点" forState:UIControlStateNormal];
//    btn.titleLabel.font = [UIFont systemFontOfSize:15];
//    btn.titleLabel.textColor = [UIColor whiteColor];
//    [btn addTarget:self action:@selector(LocalMusicClick:) forControlEvents:UIControlEventTouchUpInside];
//    [[self view] addSubview:btn];

    
    CGRect rc = TopRect(self.view.bounds, self.view.bounds.size.height-rcBkg.size.height, rcBkg.size.height);
    subViewContainer = [[[UIView alloc]initWithFrame:rc]autorelease];
    [[self view] addSubview:subViewContainer];
    
//    UIImage* pBkgImg=CImageMgr::GetBackGroundImage();
//    UIImageView *background=[[[UIImageView alloc] initWithImage:pBkgImg]autorelease];
//    [background setFrame:CGRectMake(0, 0, pBkgImg.size.width, pBkgImg.size.height)];
//    [subViewContainer addSubview:background];
    
    [segctrl setSelectedSegmentIndex:0];
    
    [[self view]bringSubviewToFront:topshadowView];
}

-(void)LocalMusicClick:(id)sender
{
    LocalMusicViewController * viewController = [[[LocalMusicViewController alloc]init]autorelease];
    [ROOT_NAVAGATION_CONTROLLER pushViewController:viewController animated:YES];
}


- (void)viewDidUnload
{
    [super viewDidUnload];
}



-(bool)hasShowTips
{
    bool res(false);
    KwConfig::GetConfigureInstance()->GetConfigBoolValue("tips", "hasShowTipsOrNot", res);
    return res;
}

-(void)showFirstInTips
{
    tipsView=[[UIView alloc] initWithFrame:self.view.bounds];
    UITapGestureRecognizer *recognizer=[[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(onTouchTips:)] autorelease];
    recognizer.numberOfTapsRequired=1;
    UIImageView* tipImage=[[[UIImageView alloc] initWithImage:CImageMgr::GetImageEx("tips.png")] autorelease];
    [tipImage setFrame:CGRectMake(85, 65, 160, 90)];
    [tipsView addSubview:tipImage];
    [tipsView addGestureRecognizer:recognizer];
    [tipsView setBackgroundColor:[UIColor clearColor]];
    [[self view] addSubview:tipsView];
}
-(void)onTouchTips:(UIGestureRecognizer *)gestureRecognizer
{
    if (tipsView) {
        [tipsView removeFromSuperview];
        [tipsView release];
        tipsView = nil;
    }
    KwConfig::GetConfigureInstance()->SetConfigBoolValue("tips", "hasShowTipsOrNot", true);
}
- (void)tryHideSubView:(UIView*)pView
{
    if (!pView.hidden) {
        pView.hidden=YES;
        [MobClick endLogPageView:[NSString stringWithUTF8String:object_getClassName(pView)]];
    }
}

- (void)tryShowSubView:(UIView*)pView
{
    pView.hidden=NO;
    [MobClick beginLogPageView:[NSString stringWithUTF8String:object_getClassName(pView)]];
}
-(void)selectSubIndex:(NSInteger)index
{
    [segctrl setSelectedSegmentIndex:index];
}
- (void) segmentControl:(SegmentControl*)segmentControl selectedItemChanged:(NSUInteger)index
{
    [self tryHideSubView:RankView.view];
    [self tryHideSubView:LocalMusicView.view];
    [self tryHideSubView:MySongView.view];

    switch (index) {
        case 0:
        {
            if(RankView == nil)
            {
                RankView = [[RankViewController alloc]initWithFrame:subViewContainer.bounds];
                [subViewContainer addSubview:RankView.view];
                RankView.musiclibDelegate = musiclibDelegate;
            }
            [self tryShowSubView:RankView.view];
        }
            break;
        case 1:
        {
            if(LocalMusicView == nil)
            {
                LocalMusicView = [[LocalMusicViewController alloc]initWithFrame:subViewContainer.bounds];
                [subViewContainer addSubview:LocalMusicView.view];
            }
            [self tryShowSubView:LocalMusicView.view];
            
            if ( ![self hasShowTips] && [LocalMusicView hasSongs]) {
                [self showFirstInTips];
            }
        }
            break;
        case 2:
        {
            if(MySongView == nil)
            {
                MySongView = [[KSMySongsViewController alloc]initWithFrame:subViewContainer.bounds];
                [subViewContainer addSubview:MySongView.view];
            }
            [self tryShowSubView:MySongView.view];
            
            if (![self hasShowTips] && [MySongView hasSongs]) {
                [self showFirstInTips];
            }
        }
            break;
    }
}

-(NSString*) AddRandURL:(NSString*)strurl
{
    return [NSString stringWithFormat:@"%@?%@",strurl,GetCurTimeToString()];
}

- (void)tryDestorySubView:(UIView**)ppView
{
    UIView*& pView=*ppView;
    if ( pView && pView.hidden) {
        [pView removeFromSuperview];
        pView=NULL;
    }
}

-(void)IObserverApp_MemoryWarning
{
    if (nil != tipsView) {
        [tipsView release];
        tipsView = nil;
    }
    
//    [self tryDestorySubView:&NewsongView];
//    [self tryDestorySubView:&RankView];
//    [self tryDestorySubView:&SingerView];
}



@end
