//
//  KBBookDetailViewController.m
//  kwbook
//
//  Created by 单 永杰 on 13-12-9.
//  Copyright (c) 2013年 单 永杰. All rights reserved.
//

#import "KBBookDetailViewController.h"
#include "globalm.h"
#include "ImageMgr.h"
#include "KwTools.h"
#include "CollectBookList.h"
#include "CacheMgr.h"
#include <vector>

#define TAG_BTN_PLAYLIST           100
#define TAG_BTN_DOWNLOAD           101
#define TAG_BTN_QUICK_DOWNLOAD     102

#define TAG_BTN_BACK      103
#define TAG_BTN_CARE      104
#define TAG_BTN_DETAIL    105
#define TAG_BTN_PLAY      106

#define TAG_TAB_PLAYLIST  107
#define TAG_TAB_DOWNLIST  108
#define TAG_TAB_QUICKDOWN 109

#define TAG_BTN_DOWN_FIRST  110
#define TAG_BTN_DOWN_SECOND 111
#define TAG_BTN_DOWN_THIRD  112
#define TAG_BTN_DOWN_FOUTH  113
#define TAG_BTN_DOWN_FIFTH  114

#define TAG_BTN_QUICKDOWN_FIRST  115
#define TAG_BTN_QUICKDOWN_SECOND 116
#define TAG_BTN_QUICKDOWN_THIRD  117
#define TAG_BTN_QUICKDOWN_FOUTH  118
#define TAG_BTN_QUICKDOWN_FIFTH  119


#define COLOR_FONT_BLUE 0x028bd0
#define COLOR_FONT_GRAY 0x515151

@interface KBBookDetailViewController ()<UITableViewDataSource, UITableViewDelegate>{
    CBookInfo m_bookInfo;
    NSMutableArray* array_chapter_info;
    UITableView* cur_table_view;
    BOOL m_bIntroductionOpend;
}

@property (nonatomic, strong) UITableView* tableViewPlay;
@property (nonatomic, strong) UITableView* tableViewDownload;
@property (nonatomic, strong) UITableView* tableViewQuickDownload;
@property (nonatomic, strong) UIView*      topBar;
@property (nonatomic, strong) UIImageView* book_image;
@property (nonatomic, strong) UIView*      view_book_intro;

@property (nonatomic, strong) UIView*      tab_bar_view;
@property (nonatomic, strong) UITableView* table_chapter_list;
@property (nonatomic, strong) UITableView* table_down_list;
@property (nonatomic, strong) UITableView* table_quickdown_list;
@property (nonatomic, strong) UIImageView* open_flag_view;

@end

@implementation KBBookDetailViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(id)initWithFrameAndBookinfo:(CGRect)rect bookInfo: (CBookInfo*)book_info{
    self = [super initWithFrame:rect];
    
    m_bookInfo = *book_info;
    
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    float gap = 0.0;
    if (isIOS7()) {
        gap = 20;
    }
    float width  = self.view.bounds.size.width;
    //    float height = self.view.bounds.size.height;
    
    [self.view setBackgroundColor:UIColorFromRGBValue(0xf0ebe3)];
    self.topBar = ({
        UIView *topBar = [[UIView alloc] initWithFrame:CGRectMake(0, 0, width, 134+gap)];
        UIImageView *backView = [[UIImageView alloc] initWithFrame:topBar.bounds];
        if (isIOS7()) {
            [backView setImage:CImageMgr::GetImageEx("BookDetailBackgroundFor7.png")];
        }
        else{
            [backView setImage:CImageMgr::GetImageEx("BookDetailBackground.png")];
        }
        [topBar addSubview:backView];
        
        UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        [backBtn setImage:CImageMgr::GetImageEx("TopBackBtn.png") forState:UIControlStateNormal];
        [backBtn setFrame:CGRectMake(0, gap, 44, 44)];
        [backBtn setTag:TAG_BTN_BACK];
        [backBtn addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [topBar addSubview:backBtn];
        
        UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(30, gap, 250, 44)];
//        [titleLabel setText:KwTools::Encoding::Utf82Gbk(m_bookInfo.m_strBookTitle.c_str())];
        [titleLabel setText:@"告诉你所不知道的蒋介石"];
        [titleLabel setBackgroundColor:[UIColor clearColor]];
        [titleLabel setTextAlignment:NSTextAlignmentCenter];
        [titleLabel setTextColor:[UIColor whiteColor]];
        [titleLabel setFont:[UIFont systemFontOfSize:20.0]];
        [topBar addSubview:titleLabel];
        
        UIButton *careBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        
        if (CCollectBookList::GetInstance()->GetCurBook([[NSString stringWithFormat:@"%s", m_bookInfo.m_strBookId.c_str()] intValue])) {
            [careBtn setImage:CImageMgr::GetImageEx("BookDetailCared.png") forState:UIControlStateNormal];
        }else {
            [careBtn setImage:CImageMgr::GetImageEx("BookDetailUnCared.png") forState:UIControlStateNormal];
        }
        
        [careBtn setFrame:CGRectMake(281, gap + 10, 27, 22.5)];
        [careBtn addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [topBar addSubview:careBtn];
        
        UIImageView* background_view = [[UIImageView alloc] initWithFrame:CGRectMake(12.5, gap + 56.5, 69, 69)];
        [background_view setImage:CImageMgr::GetImageEx("BookPicBack.png")];
        _book_image = [[UIImageView alloc] initWithFrame:CGRectMake(4.5, 4.5, 60, 60)];
        [background_view addSubview:_book_image];
        
        [self startLoadImage:@"http://img4.kuwo.cn/star/albumcover/120/59/99/1415108310.jpg"];
        [topBar addSubview:background_view];
        
        UILabel* label_artist = [[UILabel alloc] initWithFrame:CGRectMake(90, gap + 58, 200, 16)];
        [label_artist setBackgroundColor:[UIColor clearColor]];
        [label_artist setTextColor:[UIColor whiteColor]];
        [label_artist setFont:[UIFont systemFontOfSize:14]];
//        [label_artist setText:[NSString stringWithFormat:@"播讲人: %@   章节: 共%d回", KwTools::Encoding::Utf82Gbk(m_bookInfo.m_strArtist.c_str()), m_bookInfo.m_unCount]];
        [label_artist setText:@"播讲人: 单田芳  章节: 共500回"];
        [topBar addSubview:label_artist];
        
        UILabel* label_listen_cnt = [[UILabel alloc] initWithFrame:CGRectMake(90, gap + 78, 200, 16)];
        [label_listen_cnt setBackgroundColor:[UIColor clearColor]];
        [label_listen_cnt setTextColor:[UIColor whiteColor]];
        [label_listen_cnt setFont:[UIFont systemFontOfSize:14]];
//        [label_listen_cnt setText:[NSString stringWithFormat:@"人气: %d在听", m_bookInfo.m_unListenCnt]];
        [label_listen_cnt setText:@"人气: 123456在听"];
        [topBar addSubview:label_listen_cnt];
        
        topBar;
    });
    
    [[self view] addSubview:self.topBar];
    
    m_bIntroductionOpend = NO;
    NSString* book_intro = [NSString stringWithFormat:@"    %@", @"本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝"];
//    int bookIntroLength = [book_intro length];
    
    _view_book_intro = [[UIView alloc] initWithFrame:CGRectMake(11, _topBar.frame.size.height + 10, 300, 35)];
    [_view_book_intro setBackgroundColor:[UIColor clearColor]];
    
    [self resizeBookIntroduction];
    
    [self.view addSubview:_view_book_intro];

    _tab_bar_view = [[UIView alloc] initWithFrame:CGRectMake(0, _view_book_intro.frame.origin.y + _view_book_intro.frame.size.height + 5, 320, 44)];
    UIImageView* background_image = [[UIImageView alloc] initWithImage:CImageMgr::GetImageEx("BookDetailTabBar.png")];
    background_image.frame = CGRectMake(0, 0, 320, 44);
    [_tab_bar_view addSubview:background_image];
    
    _open_flag_view = [[UIImageView alloc] initWithImage:CImageMgr::GetImageEx("BookDetailClick.png")];
    _open_flag_view.frame = CGRectMake(47, 38, 14, 6);
    [_tab_bar_view addSubview:_open_flag_view];
    
    UIButton* btn_play_tab = [UIButton buttonWithType:UIButtonTypeCustom];
    btn_play_tab.frame = CGRectMake(1, 0, 106, 44);
    [btn_play_tab setTag:TAG_BTN_PLAYLIST];
    [btn_play_tab addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [btn_play_tab setBackgroundColor:[UIColor clearColor]];
    [btn_play_tab setTitle:@"播放" forState:UIControlStateNormal];
    [btn_play_tab setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
    [_tab_bar_view addSubview:btn_play_tab];
    
    UIButton* btn_down_tab = [UIButton buttonWithType:UIButtonTypeCustom];
    btn_down_tab.frame = CGRectMake(107, 0, 106, 44);
    [btn_down_tab setTag:TAG_BTN_DOWNLOAD];
    [btn_down_tab addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [btn_down_tab setBackgroundColor:[UIColor clearColor]];
    [btn_down_tab setTitle:@"下载" forState:UIControlStateNormal];
    [btn_down_tab setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
    [_tab_bar_view addSubview:btn_down_tab];
    
    UIButton* btn_quickdown_tab = [UIButton buttonWithType:UIButtonTypeCustom];
    btn_quickdown_tab.frame = CGRectMake(213, 0, 106, 44);
    [btn_quickdown_tab setTag:TAG_BTN_QUICK_DOWNLOAD];
    [btn_quickdown_tab addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [btn_quickdown_tab setBackgroundColor:[UIColor clearColor]];
    [btn_quickdown_tab setTitle:@"批量下载" forState:UIControlStateNormal];
    [btn_quickdown_tab setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
    [_tab_bar_view addSubview:btn_quickdown_tab];
    
    [self.view addSubview:_tab_bar_view];
    
    _table_chapter_list = [[UITableView alloc] initWithFrame:CGRectMake(0, _tab_bar_view.frame.origin.y + 45, 320, self.view.frame.size.height - _tab_bar_view.frame.origin.y - 45) style:UITableViewStylePlain];
    [_table_chapter_list setBackgroundColor:[UIColor greenColor]];
    [_table_chapter_list setTag:TAG_TAB_PLAYLIST];
    _table_chapter_list.allowsSelection = YES;
    [_table_chapter_list setDataSource:self];
    [_table_chapter_list setDelegate:self];
    [self.view addSubview:_table_chapter_list];
    
    _table_down_list = [[UITableView alloc] initWithFrame:CGRectMake(0, _tab_bar_view.frame.origin.y + 45, 320, self.view.frame.size.height - _tab_bar_view.frame.origin.y - 45) style:UITableViewStylePlain];
    [_table_down_list setBackgroundColor:[UIColor redColor]];
    [_table_down_list setTag:TAG_TAB_DOWNLIST];
    _table_down_list.allowsSelection = NO;
    [_table_down_list setHidden:YES];
    [_table_down_list setDataSource:self];
    [_table_down_list setDelegate:self];
    [self.view addSubview:_table_down_list];
    
    _table_quickdown_list = [[UITableView alloc] initWithFrame:CGRectMake(0, _tab_bar_view.frame.origin.y + 45, 320, self.view.frame.size.height - _tab_bar_view.frame.origin.y - 45) style:UITableViewStylePlain];
    [_table_quickdown_list setBackgroundColor:[UIColor blackColor]];
    [_table_quickdown_list setTag:TAG_TAB_QUICKDOWN];
    _table_quickdown_list.allowsSelection = NO;
    [_table_quickdown_list setHidden:YES];
    [_table_quickdown_list setDataSource:self];
    [_table_quickdown_list setDelegate:self];
    [self.view addSubview:_table_quickdown_list];
    
    cur_table_view = _table_chapter_list;
}

-(void)startLoadImage : (NSString*)str_image_url
{
    __block void* imageData = NULL;
    __block unsigned length = 0;;
    __block BOOL outOfDate;
    if (CCacheMgr::GetInstance()->Read([str_image_url UTF8String], imageData, length, outOfDate)) {
        NSLog(@"load image from cache");
        NSData *cacheImageData=[[NSData alloc] initWithBytesNoCopy:imageData length:length freeWhenDone:YES];
        UIImage *image = [[UIImage alloc] initWithData:cacheImageData];
        dispatch_async(dispatch_get_main_queue(), ^{
            [_book_image setImage:image];
        });
    }
    else{
        NSLog(@"load image from web");
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            NSData *imageData = [NSData dataWithContentsOfURL:[NSURL URLWithString:str_image_url]];
            if (imageData) {
                UIImage *image = [[UIImage alloc] initWithData:imageData];
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    [_book_image setImage:image];

                    CCacheMgr::GetInstance()->Cache(T_DAY, 3, [str_image_url UTF8String], [imageData bytes], [imageData length]);
                });
            }
            else{
                NSLog(@"load image fail");
            }
        });
    }
    
}

- (void)resizeBookIntroduction{
    NSString* book_intro = [NSString stringWithFormat:@"    %@", @"本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝"];
    int bookIntroLength = [book_intro length];
    int n_line_num = bookIntroLength / 23 + 1;
    
    for(UIView* sub_view in [_view_book_intro subviews]){
        [sub_view removeFromSuperview];
    }
    
    if (m_bIntroductionOpend) {
        _view_book_intro.frame = CGRectMake(11, _topBar.frame.size.height + 10, 300, 20 * n_line_num);
        int n_cur_pos = 0;
        for (int n_line = 0; n_line < n_line_num - 1; ++n_line) {
            UILabel* label = [[UILabel alloc] initWithFrame:CGRectMake(0, 21 * n_line, 305, 15)];
            [label setFont:[UIFont systemFontOfSize:13]];
            [label setTextColor:defaultGrayColor()];
            [label setBackgroundColor:[UIColor clearColor]];
            if (0 == n_line) {
                NSString* cur_text = [book_intro substringWithRange:NSMakeRange(n_cur_pos, 26)];
                [label setText:cur_text];
                [_view_book_intro addSubview:label];
                n_cur_pos += 26;
            }else {
                NSString* cur_text = nil;
                cur_text = [book_intro substringWithRange:NSMakeRange(n_cur_pos, 23)];
                [label setText:cur_text];
                [_view_book_intro addSubview:label];
                n_cur_pos += 23;
            }
        }
        
        UILabel* last_label = [[UILabel alloc] initWithFrame:CGRectMake(0, 21 * (n_line_num - 1), 284, 15)];
        NSString* cur_text = [[book_intro substringWithRange:NSMakeRange(n_cur_pos, bookIntroLength - n_cur_pos)] mutableCopy];
        [last_label setText:cur_text];
        [last_label setFont:[UIFont systemFontOfSize:13]];
        [last_label setTextColor:defaultGrayColor()];
        [last_label setBackgroundColor:[UIColor clearColor]];
        [_view_book_intro addSubview:last_label];
        
        UIButton* btn_open_intro = [UIButton buttonWithType:UIButtonTypeCustom];
        btn_open_intro.frame = CGRectMake(277, 21 * (n_line_num - 1) - 4, 23, 20);
        
        [btn_open_intro setBackgroundColor:[UIColor clearColor]];
        [btn_open_intro setBackgroundImage:CImageMgr::GetImageEx("BookDetailClose.png") forState:UIControlStateNormal];
        [btn_open_intro setTag:TAG_BTN_DETAIL];
        [btn_open_intro addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [_view_book_intro addSubview:btn_open_intro];
    }else {
        _view_book_intro.frame = CGRectMake(11, _topBar.frame.size.height + 10, 300, 40);
        
        UILabel* first_line = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 305, 15)];
        [first_line setFont:[UIFont systemFontOfSize:13]];
        [first_line setTextColor:defaultGrayColor()];
        if (25 < bookIntroLength) {
            NSString* cur_text = [book_intro substringWithRange:NSMakeRange(0, 26)];
            [first_line setText:cur_text];
        }else {
            [first_line setText:book_intro];
        }
        [first_line setBackgroundColor:[UIColor clearColor]];
        [_view_book_intro addSubview:first_line];
        
        if (50 < bookIntroLength) {
            NSString* cur_text = [[[book_intro substringWithRange:NSMakeRange(26, 50)] stringByAppendingString:@"..."] mutableCopy];
            UILabel* label = [[UILabel alloc] initWithFrame:CGRectMake(0, 21, 284, 15)];
            [label setFont:[UIFont systemFontOfSize:13]];
            [label setTextColor:defaultGrayColor()];
            [label setBackgroundColor:[UIColor clearColor]];
            [label setText:cur_text];
            [_view_book_intro addSubview:label];
        }
        
        UIButton* btn_open_intro = [UIButton buttonWithType:UIButtonTypeCustom];
        if (1 == n_line_num) {
            btn_open_intro.frame = CGRectMake(277, 0, 23, 20);
        }else {
            btn_open_intro.frame = CGRectMake(277, 17, 23, 20);
        }
        
        [btn_open_intro setBackgroundColor:[UIColor clearColor]];
        [btn_open_intro setBackgroundImage:CImageMgr::GetImageEx("BookDetailOpen.png") forState:UIControlStateNormal];
        [btn_open_intro setTag:TAG_BTN_DETAIL];
        [btn_open_intro addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [_view_book_intro addSubview:btn_open_intro];
    }
}

- (void)onBtnClick:(id)sender{
    UIButton* button = (UIButton*)sender;
    switch (button.tag) {
        case TAG_BTN_DETAIL:
            m_bIntroductionOpend = !m_bIntroductionOpend;
            [self resizeBookIntroduction];
            break;
            
        case TAG_BTN_BACK:
            [self.navigationController popViewControllerAnimated:YES];
            
        case TAG_BTN_PLAYLIST:
        {
            _open_flag_view.frame = CGRectMake(47, 38, 14, 6);
            [button setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
            
            UIButton* down_btn = (UIButton*)[_tab_bar_view viewWithTag:TAG_BTN_DOWNLOAD];
            if (down_btn) {
//                _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
                [down_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
            }
            
            UIButton* quick_down_btn = (UIButton*)[_tab_bar_view viewWithTag:TAG_BTN_QUICK_DOWNLOAD];
            if (quick_down_btn) {
                //                _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
                [quick_down_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
            }
            
            _table_chapter_list.hidden = NO;
            _table_down_list.hidden = YES;
            _table_quickdown_list.hidden = YES;
            
            cur_table_view = _table_chapter_list;
            
            break;
        }
            
        case TAG_BTN_DOWNLOAD:
        {
            _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
            [button setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
            
            UIButton* play_btn = (UIButton*)[_tab_bar_view viewWithTag:TAG_BTN_PLAYLIST];
            if (play_btn) {
                //                _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
                [play_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
            }
            
            UIButton* quick_down_btn = (UIButton*)[_tab_bar_view viewWithTag:TAG_BTN_QUICK_DOWNLOAD];
            if (quick_down_btn) {
                //                _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
                [quick_down_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
            }
            
            _table_chapter_list.hidden = YES;
            _table_down_list.hidden = NO;
            _table_quickdown_list.hidden = YES;
            
            cur_table_view = _table_down_list;
            
            break;
        }
            
        case TAG_BTN_QUICK_DOWNLOAD:
        {
            _open_flag_view.frame = CGRectMake(259, 38, 14, 6);
            [button setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
            
            UIButton* play_btn = (UIButton*)[_tab_bar_view viewWithTag:TAG_BTN_PLAYLIST];
            if (play_btn) {
                //                _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
                [play_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
            }
            
            UIButton* down_btn = (UIButton*)[_tab_bar_view viewWithTag:TAG_BTN_DOWNLOAD];
            if (down_btn) {
                //                _open_flag_view.frame = CGRectMake(153, 38, 14, 6);
                [down_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_GRAY) forState:UIControlStateNormal];
            }
            
            _table_chapter_list.hidden = YES;
            _table_down_list.hidden = YES;
            _table_quickdown_list.hidden = NO;
            
            cur_table_view = _table_quickdown_list;
            
            break;
        }
        default:
            break;
    }
}

-(void) btnDownloadClicked:(id)sender{
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (UIStatusBarStyle) preferredStatusBarStyle{
    return UIStatusBarStyleLightContent;
}

- (BOOL) prefersStatusBarHidden{
    return NO;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    switch (tableView.tag) {
        case TAG_TAB_PLAYLIST:
            return m_bookInfo.m_unCount;
            
        case TAG_TAB_DOWNLIST:
        {
            if (0 == (m_bookInfo.m_unCount % 5)) {
                return m_bookInfo.m_unCount / 5;
            }else {
                return (m_bookInfo.m_unCount / 5) + 1;
            }
        }
        case TAG_TAB_QUICKDOWN:
        {
            if (0 == (m_bookInfo.m_unCount % 50)) {
                return m_bookInfo.m_unCount / 50;
            }else {
                return (m_bookInfo.m_unCount / 50) + 1;
            }
        }
        default:
            return 0;
    }
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString* s_str_playlist_reuse_identifier = @"playlistReuseIdentifier";
    static NSString* s_str_downlist_reuse_identifier = @"downlistReuseIdentifier";
    static NSString* s_str_quickdown_reuse_identifier = @"quickdownReuseIdentifier";
    
    UITableViewCell* cell = nil;
    
    switch (tableView.tag) {
        case TAG_TAB_PLAYLIST:
        {
            return nil;
        }
            
        case TAG_TAB_DOWNLIST:
        {
            if (((indexPath.row + 1) * 5) <= m_bookInfo.m_unCount) {
                cell = [tableView dequeueReusableCellWithIdentifier:s_str_downlist_reuse_identifier];
                if (nil == cell) {
                    cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:s_str_downlist_reuse_identifier];
                    UIButton* first_btn = [UIButton buttonWithType:UIButtonTypeCustom];
                    first_btn.frame = CGRectMake(14, 11.5, 44, 44.5);
                    [first_btn setTag:TAG_BTN_DOWN_FIRST];
                    [first_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
                    [first_btn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
                    [first_btn addTarget:self action:@selector(btnDownloadClicked:) forControlEvents:UIControlEventTouchUpInside];
                    [cell.contentView addSubview:first_btn];
                    
                    UIButton* second_btn = [UIButton buttonWithType:UIButtonTypeCustom];
                    second_btn.frame = CGRectMake(76, 11.5, 44, 44.5);
                    [second_btn setTag:TAG_BTN_DOWN_SECOND];
                    [second_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
                    [second_btn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
                    [second_btn addTarget:self action:@selector(btnDownloadClicked:) forControlEvents:UIControlEventTouchUpInside];
                    [cell.contentView addSubview:second_btn];
                    
                    UIButton* third_btn = [UIButton buttonWithType:UIButtonTypeCustom];
                    third_btn.frame = CGRectMake(138, 11.5, 44, 44.5);
                    [third_btn setTag:TAG_BTN_DOWN_THIRD];
                    [third_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
                    [third_btn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
                    [third_btn addTarget:self action:@selector(btnDownloadClicked:) forControlEvents:UIControlEventTouchUpInside];
                    [cell.contentView addSubview:third_btn];
                    
                    UIButton* fouth_btn = [UIButton buttonWithType:UIButtonTypeCustom];
                    fouth_btn.frame = CGRectMake(200, 11.5, 44, 44.5);
                    [fouth_btn setTag:TAG_BTN_DOWN_FOUTH];
                    [fouth_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
                    [fouth_btn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
                    [fouth_btn addTarget:self action:@selector(btnDownloadClicked:) forControlEvents:UIControlEventTouchUpInside];
                    [cell.contentView addSubview:fouth_btn];
                    
                    UIButton* fifth_btn = [UIButton buttonWithType:UIButtonTypeCustom];
                    fifth_btn.frame = CGRectMake(262, 11.5, 44, 44.5);
                    [fifth_btn setTag:TAG_BTN_DOWN_FIFTH];
                    [fifth_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
                    [fifth_btn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
                    [fifth_btn addTarget:self action:@selector(btnDownloadClicked:) forControlEvents:UIControlEventTouchUpInside];
                    [cell.contentView addSubview:fifth_btn];
                }
                
            }else {
                cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:nil];
                int n_btn_num = m_bookInfo.m_unCount % 5;
                switch (n_btn_num) {
                    case 1:
                    {
                        UIButton* first_btn = [UIButton buttonWithType:UIButtonTypeCustom];
                        first_btn.frame = CGRectMake(14, 11.5, 44, 44.5);
                        [first_btn setTag:TAG_BTN_DOWN_FIRST];
                        [first_btn setTitleColor:UIColorFromRGBValue(COLOR_FONT_BLUE) forState:UIControlStateNormal];
                        [first_btn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
                        [first_btn setBackgroundImage:CImageMgr::GetImageEx("BookDetailChapterDown.png") forState:UIControlStateHighlighted];
                        [first_btn addTarget:self action:@selector(btnDownloadClicked:) forControlEvents:UIControlEventTouchUpInside];
                        [cell.contentView addSubview:first_btn];
                        break;
                    }
                    default:
                        break;
                }
            }
            return nil;
        }
            
        case TAG_TAB_QUICKDOWN:
        {
            return nil;
        }
            
        default:
            return nil;
    }
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
}

- (BOOL)getChapterList{
    return YES;
}

@end
