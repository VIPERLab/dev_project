//
//  IObserverDownTaskStatus.h
//  kwbook
//
//  Created by 单 永杰 on 13-12-3.
//  Copyright (c) 2013年 单 永杰. All rights reserved.
//

#ifndef kwbook_IObserverDownTaskStatus_h
#define kwbook_IObserverDownTaskStatus_h

@protocol IObserverDownTaskStatus <NSObject>
@optional
-(void)IObDownStatus_AddTask:(unsigned)un_rid;
-(void)IObDownStatus_DownTaskFinish:(unsigned)un_rid;
-(void)IObDownStatus_DeleteTask:(unsigned)un_rid;
-(void)IObDownStatus_PauseTask:(unsigned)un_rid;
-(void)IObDownStatus_PauseAllTasks;
-(void)IObDownStatus_StartTask:(unsigned)un_rid;
-(void)IObDownStatus_TaskFail:(unsigned)un_rid;
-(void)IObDownStatus_TaskProgress:(unsigned)un_rid:(float)fPercent:(float)fLocalSize:(float)fFileSize;
-(void)IObDownStatus_TaskSpeed:(unsigned)un_rid:(float)fSpeed;
@end

class IObserverDownTaskStatus:public IMessageObserver
{
public:
    //网络状态切换
    virtual void IObDownStatus_AddTask(unsigned un_rid){}
    virtual void IObDownStatus_DownTaskFinish(unsigned un_rid){}
    virtual void IObDownStatus_DeleteTask(unsigned un_rid){}
    virtual void IObDownStatus_PauseTask(unsigned un_rid){}
    virtual void IObDownStatus_PauseAllTasks(){}
    virtual void IObDownStatus_StartTask(unsigned un_rid){}
    virtual void IObDownStatus_TaskFail(unsigned un_rid){}
    virtual void IObDownStatus_TaskProgress(unsigned un_rid, float fPercent, float fLocalSize, float fFileSize){}
    virtual void IObDownStatus_TaskSpeed(unsigned un_rid, float fSpeed){}
    
    enum eumMethod
    {
        DownStatusAddTask,
        DownStatusTaskFinish,
        DownStatusDeleteTask,
        DownStatusPauseTask,
        DownStatusPauseAllTasks,
        DownStatusTaskStart,
        DownStatustaskFail,
        DownStatusTaskProgress,
        DownStatusTaskSpeed
    };
    
    MESSAGE_OBSERVER_NOTIFY_BEGIN(IObserverDownTaskStatus)
    
    NOTIFY_CASE_ITEM(DownStatusAddTask,IObDownStatus_AddTask,_1PARA);
    NOTIFY_CASE_ITEM(DownStatusTaskFinish,IObDownStatus_DownTaskFinish,_1PARA);
    NOTIFY_CASE_ITEM(DownStatusDeleteTask,IObDownStatus_DeleteTask,_1PARA);
    NOTIFY_CASE_ITEM(DownStatusPauseTask,IObDownStatus_PauseTask,_1PARA);
    NOTIFY_CASE_ITEM(DownStatusPauseAllTasks,IObDownStatus_PauseAllTasks,_0PARA);
    NOTIFY_CASE_ITEM(DownStatusTaskStart,IObDownStatus_StartTask,_1PARA);
    NOTIFY_CASE_ITEM(DownStatustaskFail,IObDownStatus_TaskFail,_1PARA);
    NOTIFY_CASE_ITEM(DownStatusTaskProgress,IObDownStatus_TaskProgress,_4PARA);
    NOTIFY_CASE_ITEM(DownStatusTaskSpeed,IObDownStatus_TaskSpeed,_2PARA);
    
    MESSAGE_OBSERVER_NOTIFY_END();
};

#endif
