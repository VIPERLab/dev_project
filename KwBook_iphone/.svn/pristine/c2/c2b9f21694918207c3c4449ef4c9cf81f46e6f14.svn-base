//
//  KBBookDetailViewController.m
//  kwbook
//
//  Created by 单 永杰 on 13-12-9.
//  Copyright (c) 2013年 单 永杰. All rights reserved.
//

#import "KBBookDetailViewController.h"
#include "globalm.h"
#include "ImageMgr.h"
#include "KwTools.h"
#include "CollectBookList.h"
#include "CacheMgr.h"

#define TAG_TAB_PLAY 100
#define TAG_TAB_DOWNLOAD 101
#define TAG_TAB_QUICK_DOWNLOAD 102

#define TAG_BTN_BACK 103
#define TAG_BTN_CARE 104

@interface KBBookDetailViewController (){
    CBookInfo m_bookInfo;
    NSMutableArray* array_chapter_info;
    UITableView* cur_table_view;
    BOOL m_bIntroductionOpend;
}

@property (nonatomic, strong) UITableView* tableViewPlay;
@property (nonatomic, strong) UITableView* tableViewDownload;
@property (nonatomic, strong) UITableView* tableViewQuickDownload;
@property (nonatomic, strong) UIView*      topBar;
@property (nonatomic, strong) UIImageView* book_image;
@property (nonatomic, strong) UIView*     view_book_intro;

@end

@implementation KBBookDetailViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(id)initWithFrameAndBookinfo:(CGRect)rect bookInfo: (CBookInfo*)book_info{
    self = [super initWithFrame:rect];
    
    m_bookInfo = *book_info;
    
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    float gap = 0.0;
    if (isIOS7()) {
        gap = 20;
    }
    float width  = self.view.bounds.size.width;
    //    float height = self.view.bounds.size.height;
    self.topBar = ({
        UIView *topBar = [[UIView alloc] initWithFrame:CGRectMake(0, 0, width, 134+gap)];
        UIImageView *backView = [[UIImageView alloc] initWithFrame:topBar.bounds];
        if (isIOS7()) {
            [backView setImage:CImageMgr::GetImageEx("BookDetailBackgroundFor7.png")];
        }
        else{
            [backView setImage:CImageMgr::GetImageEx("BookDetailBackground.png")];
        }
        [topBar addSubview:backView];
        
        UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        [backBtn setImage:CImageMgr::GetImageEx("TopBackBtn.png") forState:UIControlStateNormal];
        [backBtn setFrame:CGRectMake(0, gap, 44, 44)];
        [backBtn addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [topBar addSubview:backBtn];
        
        UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(30, gap, 250, 44)];
//        [titleLabel setText:KwTools::Encoding::Utf82Gbk(m_bookInfo.m_strBookTitle.c_str())];
        [titleLabel setText:@"告诉你所不知道的蒋介石"];
        [titleLabel setBackgroundColor:[UIColor clearColor]];
        [titleLabel setTextAlignment:NSTextAlignmentCenter];
        [titleLabel setTextColor:[UIColor whiteColor]];
        [titleLabel setFont:[UIFont systemFontOfSize:20.0]];
        [topBar addSubview:titleLabel];
        
        UIButton *careBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        
        if (CCollectBookList::GetInstance()->GetCurBook([[NSString stringWithFormat:@"%s", m_bookInfo.m_strBookId.c_str()] intValue])) {
            [careBtn setImage:CImageMgr::GetImageEx("BookDetailCared.png") forState:UIControlStateNormal];
        }else {
            [careBtn setImage:CImageMgr::GetImageEx("BookDetailUnCared.png") forState:UIControlStateNormal];
        }
        
        [careBtn setFrame:CGRectMake(281, gap + 10, 27, 22.5)];
        [careBtn addTarget:self action:@selector(onBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [topBar addSubview:careBtn];
        
        UIImageView* background_view = [[UIImageView alloc] initWithFrame:CGRectMake(12.5, gap + 56.5, 69, 69)];
        [background_view setImage:CImageMgr::GetImageEx("BookPicBack.png")];
        _book_image = [[UIImageView alloc] initWithFrame:CGRectMake(4.5, 4.5, 60, 60)];
        [background_view addSubview:_book_image];
        
        [self startLoadImage:@"http://img4.kuwo.cn/star/albumcover/120/59/99/1415108310.jpg"];
        [topBar addSubview:background_view];
        
        UILabel* label_artist = [[UILabel alloc] initWithFrame:CGRectMake(90, gap + 58, 200, 16)];
        [label_artist setBackgroundColor:[UIColor clearColor]];
        [label_artist setTextColor:[UIColor whiteColor]];
        [label_artist setFont:[UIFont systemFontOfSize:14]];
//        [label_artist setText:[NSString stringWithFormat:@"播讲人: %@   章节: 共%d回", KwTools::Encoding::Utf82Gbk(m_bookInfo.m_strArtist.c_str()), m_bookInfo.m_unCount]];
        [label_artist setText:@"播讲人: 单田芳  章节: 共500回"];
        [topBar addSubview:label_artist];
        
        UILabel* label_listen_cnt = [[UILabel alloc] initWithFrame:CGRectMake(90, gap + 78, 200, 16)];
        [label_listen_cnt setBackgroundColor:[UIColor clearColor]];
        [label_listen_cnt setTextColor:[UIColor whiteColor]];
        [label_listen_cnt setFont:[UIFont systemFontOfSize:14]];
//        [label_listen_cnt setText:[NSString stringWithFormat:@"人气: %d在听", m_bookInfo.m_unListenCnt]];
        [label_listen_cnt setText:@"人气: 123456在听"];
        [topBar addSubview:label_listen_cnt];
        
        topBar;
    });
    
    [[self view] addSubview:self.topBar];
    
    m_bIntroductionOpend = NO;
    NSString* book_intro = [NSString stringWithFormat:@"    %@", @"本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝本书融合民间传说与历史真实于一体，讲述了朱元璋从一个小和尚、放牛长为反元义军领袖直至建立明朝"];
    int bookIntroLength = [book_intro length];
    
    _view_book_intro = [[UIView alloc] initWithFrame:CGRectMake(11, _topBar.frame.size.height + 10, 300, 35)];
    [_view_book_intro setBackgroundColor:[UIColor clearColor]];
    
    int n_line_num = bookIntroLength / 25 + 1;
    UILabel* first_line = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 305, 15)];
    [first_line setFont:[UIFont systemFontOfSize:13]];
    [first_line setTextColor:defaultGrayColor()];
    if (25 < bookIntroLength) {
        NSString* cur_text = [book_intro substringWithRange:NSMakeRange(0, 26)];
        [first_line setText:cur_text];
    }else {
        [first_line setText:book_intro];
    }
    [first_line setBackgroundColor:[UIColor clearColor]];
    [_view_book_intro addSubview:first_line];
    
    if (50 < bookIntroLength) {
        NSString* cur_text = [[[book_intro substringWithRange:NSMakeRange(26, 50)] stringByAppendingString:@"..."] mutableCopy];
        UILabel* label = [[UILabel alloc] initWithFrame:CGRectMake(0, 21, 284, 15)];
        [label setFont:[UIFont systemFontOfSize:13]];
        [label setTextColor:defaultGrayColor()];
        [label setBackgroundColor:[UIColor clearColor]];
        [label setText:cur_text];
        [_view_book_intro addSubview:label];
    }
    
    UIButton* btn_open_intro = [UIButton buttonWithType:UIButtonTypeCustom];
    if (1 == n_line_num) {
        btn_open_intro.frame = CGRectMake(277, 0, 23, 20);
    }else {
        btn_open_intro.frame = CGRectMake(277, 17, 23, 20);
    }
    
    [btn_open_intro setBackgroundColor:[UIColor clearColor]];
    [btn_open_intro setBackgroundImage:CImageMgr::GetImageEx("BookDetailOpen.png") forState:UIControlStateNormal];
    [_view_book_intro addSubview:btn_open_intro];
    
    [self.view addSubview:_view_book_intro];

}

-(void)startLoadImage : (NSString*)str_image_url
{
    __block void* imageData = NULL;
    __block unsigned length = 0;;
    __block BOOL outOfDate;
    if (CCacheMgr::GetInstance()->Read([str_image_url UTF8String], imageData, length, outOfDate)) {
        NSLog(@"load image from cache");
        NSData *cacheImageData=[[NSData alloc] initWithBytesNoCopy:imageData length:length freeWhenDone:YES];
        UIImage *image = [[UIImage alloc] initWithData:cacheImageData];
        dispatch_async(dispatch_get_main_queue(), ^{
            [_book_image setImage:image];
        });
    }
    else{
        NSLog(@"load image from web");
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            NSData *imageData = [NSData dataWithContentsOfURL:[NSURL URLWithString:str_image_url]];
            if (imageData) {
                UIImage *image = [[UIImage alloc] initWithData:imageData];
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    [_book_image setImage:image];

                    CCacheMgr::GetInstance()->Cache(T_DAY, 3, [str_image_url UTF8String], [imageData bytes], [imageData length]);
                });
            }
            else{
                NSLog(@"load image fail");
            }
        });
    }
    
}

- (void)resizeBookIntroduction{
    if (m_bIntroductionOpend) {
        
    }else {
        
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
