//
//  HotRecoViewController.m
//  kwbook
//
//  Created by 熊 改 on 13-11-29.
//  Copyright (c) 2013年 单 永杰. All rights reserved.
//

#import "HotRecoViewController.h"
#import "KBUrls.h"
#import "CacheMgr.h"
#import "HttpRequest.h"
#import "SBJson4.h"
#import "RecoCellDataItem.h"
#import "RecoCellBtnItem.h"
#import "iToast.h"
#import "ImageMgr.h"


#define RECO_HOT_JSONDATA_CACHE_KEY    "RecoHotJsonDataCacheKey"
#define RECO_HOT_CELL_IDENTIFIER       @"RecoHotCellIdentifier"

#define TAG_LEFT_ITEM                21
#define TAG_CENTER_ITEM              22
#define TAG_RIGHT_ITEM               23

#define TAG_CELL_LOAD_DONE           31
#define TAG_CELL_NEED_LOAD           32
@interface HotRecoViewController ()<UITableViewDataSource,UITableViewDelegate>

@property (nonatomic , strong) UITableView *tableView;
@property (nonatomic , strong) NSMutableArray *tmpArray;
@property (nonatomic , strong) NSMutableArray *dataArray;
@property (nonatomic , strong) NSDictionary *attributeArray;
@property (nonatomic , strong) NSString *sig;

-(void)onRefresh:(id)sender;
-(NSData *)loadJsonDataUserCache:(BOOL)useCache;
-(BOOL)parserJsonData:(NSData *)jsonData;
-(void)onParserFinish;
-(void)refreshAllCellToReload;
-(void)startLoadImageAt:(NSIndexPath *)indexPath;
@end

@implementation HotRecoViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        _tmpArray=[NSMutableArray array];
        _dataArray= [NSMutableArray array];
        _attributeArray  = @{@"id": @"bookId",
                             @"musiccnt":@"musicCount",
                             @"name":@"bookName",
                             @"img":@"imageURL",
                             @"listencnt":@"listenCount"};
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    [[self view] setBackgroundColor:CImageMgr::GetBackGroundColor()];
    self.tableView = ({
        UITableView *tableView = [[UITableView alloc] initWithFrame:self.view.bounds];
        [tableView setBackgroundColor:[UIColor clearColor]];
        [tableView setShowsHorizontalScrollIndicator:NO];
        [tableView setShowsVerticalScrollIndicator:NO];
        [tableView setSeparatorStyle:UITableViewCellSeparatorStyleNone];
        [tableView setDelegate:self];
        [tableView setDataSource:self];
        tableView;
    });
    [[self view] addSubview:self.tableView];
    
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        NSData *jsonData = [self loadJsonDataUserCache:YES];
        [self parserJsonData:jsonData];
        dispatch_async(dispatch_get_main_queue(), ^{
            [self onParserFinish];
        });
    });
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma mark
#pragma mark load and parser data
-(NSData *)loadJsonDataUserCache:(BOOL)useCache
{
    __block void* jsonData;
    __block unsigned length;
    BOOL outOfTime;
    if (useCache && CCacheMgr::GetInstance()->Read(RECO_HOT_JSONDATA_CACHE_KEY, jsonData, length, outOfTime)) {
        NSLog(@"load json from cache");
        NSData *data=[NSData dataWithBytesNoCopy:jsonData length:length freeWhenDone:YES];
        return data;
    }
    else{
        NSLog(@"load json from web");
        NSString *strUrl = [NSString stringWithFormat:@"%@stype=json&srcver=storynew&type=story_list&id=0&pn=1&ps=9",
                            BASE_URL];
        CHttpRequest::QuickSyncGet([strUrl UTF8String],jsonData,length);
        NSData* data=[NSData dataWithBytesNoCopy:jsonData length:length freeWhenDone:YES];
        CCacheMgr::GetInstance()->Cache(T_DAY, 3, RECO_HOT_JSONDATA_CACHE_KEY, jsonData, length);
        return data;
    }
    return nil;
}
-(BOOL)parserJsonData:(NSData *)jsonData;
{
    if (jsonData == nil) {
        return NO;
    }
    SBJson4ValueBlock block = ^(id item, BOOL *stop){
        NSDictionary *dic = item;
        
        NSString *sig =  [dic objectForKey:@"sig"];
        //todo with sig
        
        NSArray *array = [dic objectForKey:@"album_list"];
        for (NSDictionary *itemDic in array) {
            RecoCellDataItem *item = [[RecoCellDataItem alloc] init];
            [item setRecoType:RECO_HOT];
            for (NSString *key in [self.attributeArray allKeys]) {
                NSString *value = [itemDic objectForKey:key];
                [item setValue:value forKey:[self.attributeArray objectForKey:key]];
            }
            [self.tmpArray addObject:item];
        }
    };
    SBJson4ErrorBlock eh = ^(NSError *error){};
    SBJson4Parser *parser = [SBJson4Parser parserWithBlock:block allowMultiRoot:NO unwrapRootArray:NO errorHandler:eh];
    
    [parser parse:jsonData];
    return NO;
}
-(void)onParserFinish
{
    self.dataArray = self.tmpArray;
    [self.tableView reloadData];
}
#pragma mark
#pragma mark table view async load image

-(void)startLoadImageAt:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:indexPath];
    if (cell) {
        RecoCellBtnItem *leftItem =  (RecoCellBtnItem *)[cell.contentView viewWithTag:TAG_LEFT_ITEM];
        RecoCellBtnItem *centerItem = (RecoCellBtnItem *)[cell.contentView viewWithTag:TAG_CENTER_ITEM];
        RecoCellBtnItem *rightItem = (RecoCellBtnItem *)[cell.contentView viewWithTag:TAG_RIGHT_ITEM];
        
        [leftItem startLoadImage];
        [centerItem startLoadImage];
        [rightItem startLoadImage];
        
        [cell setTag:TAG_CELL_LOAD_DONE];
    }
}
#pragma mark
#pragma mark on refresh

-(void)onRefresh:(id)sender
{
    [self refreshAllCellToReload];
    
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        NSData *jsonData = [self loadJsonDataUserCache:NO];
        BOOL res = [self parserJsonData:jsonData];
        if (res) {
            dispatch_async(dispatch_get_main_queue(), ^{
                [self onParserFinish];
            });
        }
        else{
            [[[[iToast makeText:NSLocalizedString(@"更新失败", @"")]setGravity:iToastGravityCenter] setDuration:2000] show];
        }
    });
}
-(void)refreshAllCellToReload
{
    int row = [self.tableView numberOfRowsInSection:0];
    for (int i = 0; i<row; i++) {
        NSString *cellIdentifier = [NSString stringWithFormat:@"%@%d",RECO_HOT_CELL_IDENTIFIER,i];
        UITableViewCell *cell = [self.tableView dequeueReusableCellWithIdentifier:cellIdentifier];
        [cell setTag:TAG_CELL_NEED_LOAD];
    }
    NSArray *cellVisble = [self.tableView visibleCells];
    for (UITableViewCell *cell in cellVisble) {
        [cell setTag:TAG_CELL_NEED_LOAD];
    }
}


#pragma mark
#pragma mark table view data source
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataArray.count/3;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSString *hotCellIdentifier = [NSString stringWithFormat:@"%@%d",RECO_HOT_CELL_IDENTIFIER,indexPath.row];
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:hotCellIdentifier];
    if (cell == nil || cell.tag != TAG_CELL_LOAD_DONE) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:hotCellIdentifier];
        [cell.contentView setBackgroundColor:[UIColor clearColor]];
        int beginIndex = indexPath.row *3;
        RecoCellBtnItem *leftItem = [[RecoCellBtnItem alloc] initWithFrame:CGRectMake(2.5, 2, 105, 152)
                                                              andAlbumInfo:self.dataArray[beginIndex]];
        RecoCellBtnItem *centerItem = [[RecoCellBtnItem alloc] initWithFrame:CGRectMake(107.5, 2, 105, 152)
                                                                andAlbumInfo:self.dataArray[beginIndex +1]];
        RecoCellBtnItem *rightItem = [[RecoCellBtnItem alloc] initWithFrame:CGRectMake(212.5, 2, 105, 152)
                                                               andAlbumInfo:self.dataArray[beginIndex+2]];
        [leftItem setTag:TAG_LEFT_ITEM];
        [centerItem setTag:TAG_CENTER_ITEM];
        [rightItem setTag:TAG_RIGHT_ITEM];
        
        [cell.contentView addSubview:leftItem];
        [cell.contentView addSubview:centerItem];
        [cell.contentView addSubview:rightItem];
        
        [self performSelector:@selector(startLoadImageAt:) withObject:indexPath afterDelay:1.0];
    }
    return cell;
}
#pragma mark
#pragma mark table view delegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 157.0f;
}

@end
