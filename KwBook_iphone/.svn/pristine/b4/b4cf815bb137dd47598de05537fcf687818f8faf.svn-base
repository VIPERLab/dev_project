//
//  KBSearchViewController.m
//  kwbook
//
//  Created by 单 永杰 on 13-12-4.
//  Copyright (c) 2013年 单 永杰. All rights reserved.
//

#import "KBSearchViewController.h"
#import "globalm.h"
#import "ImageMgr.h"
#include "HotSearchWords.h"
#include "SearchHistory.h"

enum TableViewType {
    E_TABLE_SEARCH_HOT_WORDS,
    E_TABLE_SEARCH_HISTORY,
    E_TABLE_SEARCH_RESULT
};

#define TAG_FIRST_BTN  101
#define TAG_SECOND_BTN 102
#define TAG_THIRD_BTN  103
#define TAG_CANCEL     104

@interface KBSearchViewController () <UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate>{
    TableViewType e_table_type;
}

@property (nonatomic , strong) UIView           *topBar;
@property (nonatomic , strong) UISearchBar      *searchBar;
@property (nonatomic , strong) NSArray          *hotSearchWords;
@property (nonatomic , strong) NSArray          *searchHistory;
@property (nonatomic , strong) NSArray          *searchResult;
@property (nonatomic , strong) UITableView      *tableView;

@end

@implementation KBSearchViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    float gap = 0.0;
    if (isIOS7()) {
        gap = 20;
    }
    float width  = self.view.bounds.size.width;
//    float height = self.view.bounds.size.height;
    self.topBar = ({
        UIView *topBar = [[UIView alloc] initWithFrame:CGRectMake(0, 0, width, 44+gap)];
        UIImageView *backView = [[UIImageView alloc] initWithFrame:topBar.bounds];
        if (isIOS7()) {
            [backView setImage:CImageMgr::GetImageEx("RecoTopBackFor7.png")];
        }
        else{
            [backView setImage:CImageMgr::GetImageEx("RecoTopBackFor6.png")];
        }
        [topBar addSubview:backView];
        UIButton *backBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        [backBtn setImage:CImageMgr::GetImageEx("TopBackBtn.png") forState:UIControlStateNormal];
        [backBtn setFrame:CGRectMake(0, gap, 44, 44)];
        [backBtn addTarget:self action:@selector(onBackBtnClick) forControlEvents:UIControlEventTouchUpInside];
        [topBar addSubview:backBtn];
        
        UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(70, gap, 180, 44)];
        [titleLabel setText:@"搜索"];
        [titleLabel setBackgroundColor:[UIColor clearColor]];
        [titleLabel setTextAlignment:NSTextAlignmentCenter];
        [titleLabel setTextColor:[UIColor whiteColor]];
        [titleLabel setFont:[UIFont systemFontOfSize:20.0]];
        [topBar addSubview:titleLabel];
        
        topBar;
    });
    [[self view] addSubview:self.topBar];
    
    NSLog(@"search view height %f", self.view.frame.size.height);
    
    UIView* back_view = [[UIView alloc] init];
    back_view.frame = CGRectMake(0, 44+gap, width, 64);
    [back_view setBackgroundColor:UIColorFromRGB(204, 200, 194)];
    [[self view] addSubview:back_view];
    
    _searchBar = [[UISearchBar alloc] initWithFrame:CGRectMake(12, 17.5, 296, 29)];
    [_searchBar setBackgroundColor:[UIColor clearColor]];
    if (isIOS7()) {
        [_searchBar setBarTintColor:[UIColor clearColor]];
    }else {
        [[[_searchBar subviews] objectAtIndex:0] removeFromSuperview];
    }
    [back_view addSubview:_searchBar];
    [_searchBar setDelegate:self];
    
    UIButton* btn_cancel = [UIButton buttonWithType:UIButtonTypeCustom];
    btn_cancel.frame = CGRectMake(264, 17.5, 40, 29);
    [btn_cancel setBackgroundColor:[UIColor redColor]];
    [btn_cancel setTitle:@"取消" forState:UIControlStateNormal];
    [btn_cancel setTag:TAG_CANCEL];
    [btn_cancel addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
    [back_view addSubview:btn_cancel];
    [btn_cancel setHidden:YES];
    
    _hotSearchWords = CHotSearchWords::GetInstance()->GetHotSearchWords();
    _searchHistory = CSearchHistroy::GetInstance()->GetSearchHistory();
    
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 108 + gap, width, self.view.frame.size.height - 108 - gap)];
    [_tableView setBackgroundColor:CImageMgr::GetBackGroundColor()];
    [self.view addSubview:_tableView];
    [_tableView setDataSource:self];
    [_tableView setDelegate:self];
    
    e_table_type = E_TABLE_SEARCH_HOT_WORDS;
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.allowsSelection = NO;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)onBackBtnClick{
    [self.navigationController popViewControllerAnimated:YES];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (0 == indexPath.row) {
        return 38;
    }
    
    switch (e_table_type) {
        case E_TABLE_SEARCH_HOT_WORDS:
            return 107;
            
        default:
            return 44;
    }
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    switch (e_table_type){
        case E_TABLE_SEARCH_HOT_WORDS:
        {
            if (_hotSearchWords && [_hotSearchWords count]) {
                return 1 + roundl([_hotSearchWords count] / 3.0) ;
            }else {
                return 0;
            }
        }
            
        case E_TABLE_SEARCH_HISTORY:
        {
            if (_searchHistory && [_searchHistory count]) {
                return 1 + [_searchHistory count];
            }else {
                return 0;
            }
        }
        case E_TABLE_SEARCH_RESULT:
        {
            if (_searchResult) {
                return 1 + [_searchResult count];
            }else {
                return 1;
            }
        }
            
        default:
            return 0;
    }
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *s_hotsearchwords_identifier = @"hotSearchWordsIdentifier";
    static NSString *s_history_identifier = @"histroyIdentifier";
    static NSString *s_searchresult_identifier = @"searchResultIdentifier";
    UITableViewCell* cell = nil;
    NSInteger row = [indexPath row];
    switch (e_table_type) {
        case E_TABLE_SEARCH_HOT_WORDS:
        {
            if (0 == row) {
                cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:nil];
                
                [cell setBackgroundColor:[UIColor clearColor]];
                
                UILabel* label = [[UILabel alloc] initWithFrame:CGRectMake(17.5, 12.5, 320, 15)];
                [label setText:@"大家都在搜"];
                [label setBackgroundColor:[UIColor clearColor]];
                [cell.contentView addSubview:label];
            }else {
                if (3 * row > [_hotSearchWords count]) {
                    cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:nil];
                    if (1 == [_hotSearchWords count] % 3) {
                        [cell setBackgroundColor:[UIColor clearColor]];
                        UIButton* first_button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                        first_button.frame = CGRectMake(17.5, 0, 73, 73);
                        first_button.titleLabel.numberOfLines = 0;
                        [first_button setBackgroundColor:[UIColor redColor]];
                        [first_button setTitle:[_hotSearchWords objectAtIndex:(3 * row - 3)] forState:UIControlStateNormal];
                        [first_button setTag:TAG_FIRST_BTN];
                        
                        [cell.contentView addSubview:first_button];
                    }else {
                        [cell setBackgroundColor:[UIColor clearColor]];
                        UIButton* first_button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                        first_button.frame = CGRectMake(17.5, 0, 73, 73);
                        first_button.titleLabel.numberOfLines = 0;
                        [first_button setBackgroundColor:[UIColor redColor]];
                        [first_button setTitle:[_hotSearchWords objectAtIndex:(3 * row - 3)] forState:UIControlStateNormal];
                        [first_button setTag:TAG_FIRST_BTN];
                        
                        [cell.contentView addSubview:first_button];
                        
                        UIButton* second_button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                        second_button.frame = CGRectMake(124, 0, 73, 73);
                        second_button.titleLabel.numberOfLines = 0;
                        [second_button setBackgroundColor:[UIColor redColor]];
                        [second_button setTitle:[_hotSearchWords objectAtIndex:(3 * row - 2)] forState:UIControlStateNormal];
                        [second_button setTag:TAG_SECOND_BTN];
                        
                        [cell.contentView addSubview:second_button];
                    }
                }else {
                    cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:s_hotsearchwords_identifier];
                    [cell setBackgroundColor:[UIColor clearColor]];
                    UIButton* first_button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    first_button.frame = CGRectMake(17.5, 0, 73, 73);
                    first_button.titleLabel.numberOfLines = 0;
                    [first_button setBackgroundColor:[UIColor redColor]];
                    [first_button setTitle:[_hotSearchWords objectAtIndex:(3 * row - 3)] forState:UIControlStateNormal];
                    [first_button setTag:TAG_FIRST_BTN];
                    
                    [cell.contentView addSubview:first_button];
                    
                    UIButton* second_button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    second_button.frame = CGRectMake(124, 0, 73, 73);
                    second_button.titleLabel.numberOfLines = 0;
                    [second_button setBackgroundColor:[UIColor redColor]];
                    [second_button setTitle:[_hotSearchWords objectAtIndex:(3 * row - 2)] forState:UIControlStateNormal];
                    [second_button setTag:TAG_SECOND_BTN];
                    
                    [cell.contentView addSubview:second_button];
                    
                    UIButton* third_button = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    third_button.frame = CGRectMake(230.5, 0, 73, 73);
                    third_button.titleLabel.numberOfLines = 0;
                    [third_button setBackgroundColor:[UIColor redColor]];
                    [third_button setTitle:[_hotSearchWords objectAtIndex:(3 * row - 1)] forState:UIControlStateNormal];
                    [third_button setTag:TAG_THIRD_BTN];
                    
                    [cell.contentView addSubview:third_button];
                }
                
            }
            break;
        }
            
        case E_TABLE_SEARCH_HISTORY:
        {
            break;
        }
            
        case E_TABLE_SEARCH_RESULT:
        {
            break;
        }
            
        default:
            break;
    }
    
    return cell;
}

- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar{
    [searchBar becomeFirstResponder];
    [searchBar setText:@""];
    searchBar.frame = CGRectMake(12, 17.5, 250, 29);
    UIButton* btn_cancel = (UIButton*)[self.view viewWithTag:TAG_CANCEL];
    if (btn_cancel) {
        [btn_cancel setHidden:NO];
    }
//    [table_friends setHidden:YES];
}

- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar{
    
//    [_waitingDialog show];
//    _nCurrentPage = 1;
//    _bHasMore = NO;
//    [friend_list removeAllObjects];
//    [table_friends reloadData];
//    [searchBar resignFirstResponder];
//    [self fetchJsonData];
//    [table_friends setHidden:NO];
}

-(void)btnClicked:(UIButton *)sender{
    switch (sender.tag) {
        case TAG_CANCEL:
        {
            [_searchBar resignFirstResponder];
            _searchBar.frame = CGRectMake(12, 17.5, 296, 29);
            [sender setHidden:YES];
            
            e_table_type = E_TABLE_SEARCH_HOT_WORDS;
            [_tableView reloadData];
            break;
        }
            
        default:
            break;
    }
}

@end
